<?xml version="1.0" encoding="utf-8"?>
<s:SparkSkin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
			 xmlns:fb="http://ns.adobe.com/flashbuilder/2009" 
			 blendMode="normal"
			 xmlns:scroller="tj.ttu.components.components.scroller.*"
			 >
	
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.TextArea")]
		]]>
	</fx:Metadata> 
	
	<fx:Script fb:purpose="styling">
		<![CDATA[
			import mx.core.FlexVersion;
			
			private var lineBreakChanged:Boolean;
			private var paddingChanged:Boolean;
			private var verticalAlignChanged:Boolean;
			
			/* Define the skin elements that should not be colorized. 
			For text area, the skin itself is colorized but the individual parts are not as well 
			as the border since it uses the borderColor style. */
			static private const exclusions:Array = ["background", "scroller", "promptDisplay", "border"];
			
			/* exclusions before Flex 4.5 for backwards-compatibility purposes */
			static private const exclusions_4_0:Array = ["background", "scroller", "promptDisplay"];
			
			
			/**
			 * @private
			 */
			override public function get colorizeExclusions():Array 
			{
				// Since border is styleable via borderColor, no need to allow chromeColor to affect
				// the border.  This is wrapped in a compatibility flag since this change was added  
				// in Flex 4.5
				if (FlexVersion.compatibilityVersion < FlexVersion.VERSION_4_5)
				{
					return exclusions_4_0;
				}
				
				return exclusions;
			}
			
			/* Define the content fill items that should be colored by the "contentBackgroundColor" style. */
			static private const contentFill:Array = ["bgFill"];
			
			/**
			 *  @private
			 */
			override public function get contentItems():Array {return contentFill};
			
			/** 
			 * @private 
			 */     
			private static const focusExclusions:Array = ["textDisplay"];
			
			/**
			 *  @private
			 */
			override public function get focusSkinExclusions():Array { return focusExclusions;};
			
		]]>
	</fx:Script>
	
	<s:states>
		<s:State name="normal"/>
		<s:State name="disabled" stateGroups="disabledStates"/>
		<s:State name="normalWithPrompt"/>
		<s:State name="disabledWithPrompt" stateGroups="disabledStates"/>
	</s:states>
	
	<!-- border --> 
	<!--- @private -->
	<s:Rect left="0" right="0" top="0" bottom="0" id="border" radiusX="4" radiusY="4">
		<s:stroke>
			<s:SolidColorStroke id="borderStroke" color="0x89AEC4" weight="1"/>
		</s:stroke>
	</s:Rect>
	
	
	<!-- fill -->
	<!--- Defines the appearance of the TextArea component's background. -->
	<s:Rect id="background" left="1" right="1" top="1" bottom="1" radiusX="5" radiusY="5">
		<s:fill>
			<!--- @private Defines the background fill color. -->
			<s:SolidColor id="bgFill" color="0xFFFFFF" />
		</s:fill>
	</s:Rect>
	
	
	
	<scroller:TTUScroller id="scroller" left="1" top="10" right="2" bottom="10" 
						  minViewportInset="1" measuredSizeIncludesScrollBars="false" 
						  hasFocusableChildren="false"
						  verticalScrollPolicy="auto"
						  horizontalScrollPolicy="off"
						  >
		<!--Text Container-->
		<!--- @copy spark.components.supportClasses.SkinnableTextBase#textDisplay -->
		<s:RichEditableText id="textDisplay" 
							left="0" top="0" right="0" bottom="0"
							paddingBottom="10" paddingLeft="10" paddingRight="15" paddingTop="0"
							color="0x30424c"
							fontLookup="embeddedCFF"
							widthInChars="{(width-6)/22}"
							multiline="true"
							/>
		
		</scroller:TTUScroller>
		<!--- Defines the Label that is used for prompt text. The includeInLayout property is false so the prompt text does not affect measurement. -->
		<s:Label id="promptDisplay"
				 mouseEnabled="false" mouseChildren="false"
				 includeIn="normalWithPrompt,disabledWithPrompt" 
				 includeInLayout="false"
				 />            
</s:SparkSkin>
