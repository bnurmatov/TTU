<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for the mute button of a Spark VideoPlayer 
component while in one of the <code>fullScreen</code> skin states.  

@see spark.components.VideoPlayer

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark" 
		creationComplete="init()"
		alpha.disabledStates="0.5"
		minWidth="30" minHeight="30">
	
	<!-- host component -->
	<fx:Metadata>
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.mediaClasses.MuteButton")]
	</fx:Metadata>
	
	<fx:Script>
		<![CDATA[
			import mx.events.FlexEvent;
			import spark.components.mediaClasses.VolumeBar;
			
			private function init():void
			{
				// this is essentially just binding code.  Anytime the volume changes, 
				// let us know.
				volume = hostComponent.muted ? 0 : hostComponent.volume;
				hostComponent.addEventListener(FlexEvent.VALUE_COMMIT, valueCommitHandler);
				hostComponent.addEventListener(FlexEvent.MUTED_CHANGE, valueCommitHandler);
			}
			
			private function valueCommitHandler(event:Event):void
			{
				volume = hostComponent.muted ? 0 : hostComponent.volume;
			}
			
			private var _volume:Number = 1;
			
			/**
			 *  The volume of the component to represent.
			 */
			public function get volume():Number
			{
				return _volume;
			}
			
			/**
			 *  @private
			 */
			public function set volume(value:Number):void
			{
				if (value == _volume)
					return;
				_volume = value;
				
				disabledSoundImage.visible = (value < 0.001);
				enabledSoundImage.visible = (value > 0.001);
			}
			
			private function setAlphaTo(bar:Array, alpha:Number):void
			{
				for (var i:int = 0; i < bar.length; i++)
				{
					// scale this by 0.75
					bar[i].alpha = alpha * .75;
				}
			}
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" stateGroups="upStates,normalStates"/>
		<s:State name="over" stateGroups="overStates,normalStates" />
		<s:State name="down" stateGroups="downStates,normalStates" />
		<s:State name="disabled" stateGroups="disabledStates,normalStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates,selectedUpStates" />
		<s:State name="overAndSelected" stateGroups="overStates,selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates,selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates,disabledStates,selectedStates" />
	</s:states>
	
	<!-- layer 1: fill -->
	<s:Group width="100%" height="100%">
		<s:Rect radiusX="2" radiusY="2" left="1" right="1" top="1" bottom="1"
				alpha="0">
			<s:fill>
				<s:SolidColor color="0x000000"/>
			</s:fill>
		</s:Rect>
		<s:Rect radiusX="2" radiusY="2" left="1" right="1" top="1" bottom="1"
				includeIn="down,downAndSelected" >
			<s:filters>
				<s:DropShadowFilter color="0x000000" inner="true" blurX="8" blurY="8" distance="1" quality="3" strength="0.8" alpha="1" 
									knockout="true"/>
			</s:filters>
			<s:fill>
				<s:SolidColor color="0x000000"/>
			</s:fill>
		</s:Rect>
		
		<s:BitmapImage id="enabledSoundImage"
					   width="22" height="21" verticalCenter="-1" horizontalCenter="0"
					   source.up="@Embed('/embed_assets/images/volume_up_icon.png')"
					   source.disabled="@Embed('/embed_assets/images/volume_up_icon.png')"
					   source.over="@Embed('/embed_assets/images/volume_down_icon.png')"
					   source.down="@Embed('/embed_assets/images/volume_down_icon.png')"
					   fillMode="clip"
					   alpha.disabled="0.4"
					   alpha.disabledAndSelected="0.4"/>
		
		<s:BitmapImage id="disabledSoundImage"
					   width="22" height="21" verticalCenter="-1" horizontalCenter="0"
					   source="@Embed('/embed_assets/images/mute_icon_up.png')"
					   fillMode="clip"
					   alpha.disabled="0.4"
					   alpha.disabledAndSelected="0.4"/>
	</s:Group>
	
	<!-- layer 2: One pixel stroke inside border -->
	
	<!-- layer 3: border - put on top of the fill so it doesn't disappear when scale is less than 1 -->
	
	<!--- Defines the volume symbol. -->
	<s:Group horizontalCenter="0" verticalCenter="0" id="volumeSymbol">
	
		<!-- volume bars -->
		
		<!-- big volume bar representing volume values [.75, 1] -->
		<s:Line alpha="0" yFrom="0" yTo="12" x="16">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<!--- @private -->
					<s:GradientEntry color="0xFFFFFF" ratio=".9" id="bar4_1" />
					<!--- @private -->
					<s:GradientEntry color="0x000000" id="bar4_2" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Line>
		
		<!-- middle volume bar representing volume values [.5, .75] -->
		<!--- @private -->
		<s:Line alpha="0" yFrom="2" yTo="10" x="14">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<!--- @private -->
					<s:GradientEntry color="0xFFFFFF" ratio=".9" id="bar3_1" />
					<!--- @private -->
					<s:GradientEntry color="0x404040" id="bar3_2" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Line>
		
		<!-- middle volume bar representing volume values [.25, .5] -->
		<!--- @private -->
		<s:Line alpha="0" yFrom="3" yTo="9" x="12">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<!--- @private -->
					<s:GradientEntry color="0xFFFFFF" ratio=".9" id="bar2_1" />
					<!--- @private -->
					<s:GradientEntry color="0x404040" id="bar2_2" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Line>
		
		<!-- small volume bar representing volume values [0, .25] -->
		<s:Line alpha="0" yFrom="5" yTo="7" x="10">
			<s:stroke>
				<s:LinearGradientStroke rotation="90">
					<!--- @private -->
					<s:GradientEntry color="0xFFFFFF" ratio=".9" id="bar1_1" />
					<!--- @private -->
					<s:GradientEntry color="0x404040" id="bar1_2" />
				</s:LinearGradientStroke>
			</s:stroke>
		</s:Line>
	</s:Group>
	
</s:Skin>
