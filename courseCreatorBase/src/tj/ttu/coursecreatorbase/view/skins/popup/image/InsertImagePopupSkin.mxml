<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx"
		xmlns:slider="com.transparent.legcomponents.components.slider.*"
		minWidth="200" minHeight="200"
		width="620" height="400" 
		xmlns:progressbar="tj.ttu.components.components.progressbar.*" xmlns:dropdown="tj.ttu.components.components.dropdown.*"
		>
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("tj.ttu.coursecreatorbase.view.components.popup.image.InsertImagePopup")]
	</fx:Metadata>
	<fx:Script>
		<![CDATA[
			import tj.ttu.base.constants.FontConstants;
			import tj.ttu.base.constants.ResourceConstants;
			import tj.ttu.base.utils.ProtocolType;
			import tj.ttu.base.vo.ImageVO;
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:ArrayCollection id="locationColl">
			<fx:Object>
				<fx:label>{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, "noneLocationLabelText" ) || "none"}</fx:label>
				<fx:data>{ImageVO.NONE}</fx:data>
			</fx:Object>
			<fx:Object>
				<fx:label>{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, "leftLocationLabelText" ) || "left"}</fx:label>
				<fx:data>{ImageVO.LEFT}</fx:data>
			</fx:Object>
			<fx:Object>
				<fx:label>{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, "rightLocationLabelText" ) || "right"}</fx:label>
				<fx:data>{ImageVO.RIGHT}</fx:data>
			</fx:Object>
			<fx:Object>
				<fx:label>{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, "topLocationLabelText" ) || "start"}</fx:label>
				<fx:data>{ImageVO.START}</fx:data>
			</fx:Object>
			<fx:Object>
				<fx:label>{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, "bottomLocationLabelText" ) || "end"}</fx:label>
				<fx:data>{ImageVO.END}</fx:data>
			</fx:Object>
		</s:ArrayCollection>
		
		<s:ArrayCollection id="protocolColl">
			<fx:Object protocol="{ProtocolType.LOCALE}" label="{ProtocolType.LOCALE_LABEL}"/>
			<fx:Object protocol="{ProtocolType.HTTP}" label="{ProtocolType.HTTP_LABEL}"/>
			<fx:Object protocol="{ProtocolType.HTTPS}" label="{ProtocolType.HTTPS_LABEL}"/>
			<fx:Object protocol="{ProtocolType.FTP}" label="{ProtocolType.FTP_LABEL}"/>
		</s:ArrayCollection>
	</fx:Declarations>
	<!-- background -->
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0xDFE7EA"/>
		</s:fill>
		<s:filters>
			<s:DropShadowFilter angle="90" blurX="10" blurY="10" distance="2" knockout="false"
								quality="3" strength="1.1"/>
		</s:filters>
	</s:Rect>
	
	<!--Window Title Box-->
	<s:Group width="100%" height="35">
		<s:Rect left="3" right="3" top="3" bottom="3" width="100%" height="35">
			<s:fill>
				<s:SolidColor color="0x6A6B70"/>
			</s:fill>
		</s:Rect>
		
		<!--Title Box Components-->
		<s:Group width="100%" height="35" horizontalCenter="0" verticalCenter="0">
			
			<!--Window Icon-->
			<s:BitmapImage left="7" width="24" height="24" source="@Embed('/embed_assets/images/customize_activity_icon.png')"
						   verticalCenter="-2"/>
			
			<!--Window Title-->
			<s:RichText id="titleControl" left="35" width="100%" height="35" color="0xFFFFFF"
						styleName="uiFont"
						fontWeight="bold"
						text="{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'insertImagePopupTitleLabelText' ) || 'INSERT IMAGE'}"
						verticalAlign="middle" verticalCenter="0"/>
			
			<!--Window Close Button-->
			<s:Button id="buttonClose" right="7"  width="18" height="18"
					  buttonMode="true"
					  skinClass="tj.ttu.components.skins.buttons.CloseButtonSkin"
					  toolTip="{resourceManager.getString(ResourceConstants.TTU_COMPONENTS, 'closeToolTip') || 'Close current window'}"
					  verticalCenter="0"/>
		</s:Group>
	</s:Group>
	
	<!--text BG-->
	<s:Group width="100%" height="100%"
			 visible="{!hostComponent.enableInsert}">
		
		<!--Window Message-->
		<s:TextArea editable="false" selectable="false" width="100%" height="100%"
					top="120"
					left="30"
					right="30"
					alpha="0.68" contentBackgroundColor="#f0fafa"
					fontFamily="{resourceManager.getString(ResourceConstants.FONT, FontConstants.UI_FONT)}"
					fontSize="18"
					verticalCenter="0"
					lineHeight="185%"
					text="{resourceManager.getString(ResourceConstants.TTU_COMPONENTS, 'insertImagePopupMessageLabelText') || '1. Select an image from your computer that you would like to add to your article.\n2. Resize the image if necessary.\n3. Use the Location menu to choose whether the image should appear to the left or right of the line where your cursor is currently located.\n4. Click Insert to add the image to your article.\n5. If you do not like how the image looks after it has been inserted, press the Backspace key to delete it.'}"
					verticalAlign="middle"
					textAlign="left"
					skinClass="tj.ttu.components.skins.input.MultilineTextAreaSkin"
					/>
	</s:Group>
	
	
	<!--Horisontal and Vertical Sliders-->
	<s:Group width="100%" height="100%"  visible="{hostComponent.enableInsert}">
		<!-- imageWidth input -->
		<s:HSlider id="imageWidthSlider"
				   right="60"
				   height="20"
				   top="40" 
				   left="55"   
				   minimum="20"
				   skinClass="tj.ttu.components.skins.slider.ImportImageHSlider"
				   />
		
		<!-- imageHeight input -->
		<s:VSlider id="imageHeightSlider"
				   width="20" 
				   bottom="45"
				   top="60" right="15" 
				   minimum="20"
				   skinClass="tj.ttu.components.skins.slider.ImportImageVSlider"
				   />
		
	</s:Group>
	
	
	<!-- image box  -->
	<s:Image id="imageBox"
			 width="{Math.min(imageWidthSlider.value, this.width - 80)}" height="{imageHeightSlider.value}"
			 top="75"
			 bottom="50"
			 verticalCenter="0"
			 horizontalCenter="0"
			 />
	
	<s:HGroup  left="20" right="20" bottom="10" height="30" verticalAlign="middle">
		
		<s:DropDownList id="locationDDList"
						width="160" height="30"
						selectedIndex="0"
						dataProvider="{locationColl}"
						prompt="{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'locationDropDownPrompt' ) || 'Select a location'}"
						skinClass="tj.ttu.components.skins.dropdown.ImageDropDownSkin"
						itemRenderer="tj.ttu.components.renderers.ProtocolItemRenderer"
						/>
		
	<!-- input path -->
	<s:TextArea id="textInputUrl" width="100%"
				 height="30"
				 fontSize="14"
				 prompt="{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'inputURLPrompt' ) || 'Enter Image Address'}"
				 toolTip="{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'inputURLToolTip' ) || 'Enter Image Address'}"
				 skinClass="tj.ttu.components.skins.input.SingleLineTextAreaSkin"
				 />
	
	<!-- button Open -->
	<dropdown:ProtocolDropDownList id="dropDownOpen" 
								   horizontalScrollPolicy="off" 
								   width="100" height="30"
								   buttonMode="true"
								   dataProvider="{protocolColl}"
								   prompt="{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'openImage' ) || 'Open'}"
								   toolTip="{resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'openImageToolTip' )}"
								   itemRenderer="tj.ttu.components.renderers.ProtocolItemRenderer"
								   skinClass="tj.ttu.components.skins.dropdown.ProtocolDropDownSkin"
								   />
		
	<s:Button id="insertButton"
			  buttonMode="true"
			  width="100" height="30" 
			  enabled="{hostComponent.enableInsert}"
			  label="{ resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'insertButtonLabel' ) || 'Insert' }"
			  toolTip="{  resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'insertButtonToolTip' ) || 'Insert image'}"
			  skinClass="tj.ttu.components.skins.buttons.BlueBgButtonSkin"
			  />
	
	<s:Button id="buttonCancel"
			  buttonMode="true"
			  width="100" height="30"
			  label="{ resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'cancelPopupButtonLabel' ) || 'Cancel'}"
			  toolTip="{ resourceManager.getString( ResourceConstants.TTU_COMPONENTS, 'cancelPopupButtonToolTip' ) || 'Cancel' }"
			  skinClass="tj.ttu.components.skins.buttons.BlueBgButtonSkin"
			  />
	
	</s:HGroup>
	
</s:Skin>
